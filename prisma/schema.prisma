// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Project {
  id                  String   @id @default(cuid())
  
  // Informasi Umum Proyek
  penyediaJasa        String?  @map("penyedia_jasa")
  pekerjaan           String?
  jenisPaket          String?  @map("jenis_paket")
  jenisPengadaan      String?  @map("jenis_pengadaan")
  
  // Informasi Kontrak & Anggaran
  paguAnggaran        String?  @map("pagu_anggaran")
  nilaiKontrak        String?  @map("nilai_kontrak")
  nomorKontrak        String?  @map("nomor_kontrak")
  spmk                String?
  masaKontrak         String?  @map("masa_kontrak")
  tanggalKontrak      String?  @map("tanggal_kontrak")
  akhirKontrak        String?  @map("akhir_kontrak")
  pembayaranTerakhir  String?  @map("pembayaran_terakhir")
  
  // Progress data
  fisikProgress       Float?   @default(0) @map("fisik_progress")
  fisikDeviasi        Float?   @default(0) @map("fisik_deviasi")
  fisikTarget         Float?   @default(100) @map("fisik_target")
  
  saluranProgress     Float?   @default(0) @map("saluran_progress")
  saluranDeviasi      Float?   @default(0) @map("saluran_deviasi")
  saluranTarget       Float?   @default(0) @map("saluran_target")
  
  bangunanProgress    Float?   @default(0) @map("bangunan_progress")
  bangunanDeviasi     Float?   @default(0) @map("bangunan_deviasi")
  bangunanTarget      Float?   @default(0) @map("bangunan_target")
  
  keuanganProgress    Float?   @default(0) @map("keuangan_progress")
  keuanganDeviasi     Float?   @default(0) @map("keuangan_deviasi")
  keuanganTarget      Float?   @default(0) @map("keuangan_target")
  
  // Realisasi data (JSON untuk fleksibilitas)
  outputData          Json?    @map("output_data")
  tenagaKerjaData     Json?    @map("tenaga_kerja_data")
  alatData            Json?    @map("alat_data")
  materialData        Json?    @map("material_data")
  
  // Metadata
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
  
  // Relations
  auditLogs           ProjectAuditLog[]
  activities          Activity[]
  cumulativeSchedules CumulativeSchedule[]
  materials           Material[]
  
  @@map("projects")
}

// Model untuk tracking perubahan otomatis
model ProjectAuditLog {
  id          String   @id @default(cuid())
  projectId   String   @map("project_id")
  fieldName   String   @map("field_name")
  oldValue    String?  @map("old_value")
  newValue    String?  @map("new_value")
  changedAt   DateTime @default(now()) @map("changed_at")
  
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@map("project_audit_logs")
}

// Model untuk kegiatan pekerjaan
model Activity {
  id            String   @id @default(cuid())
  projectId     String   @map("project_id")
  name          String   @map("name")
  order         Int      @default(0)    @map("order") // Urutan tampilan
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  project       Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  subActivities SubActivity[]
  schedules     ActivitySchedule[]
  
  @@map("activities")
}

// Model untuk sub kegiatan pekerjaan
model SubActivity {
  id            String   @id @default(cuid())
  activityId    String   @map("activity_id")
  name          String   @map("name")
  satuan        String?  @map("satuan") // Unit measurement
  volumeKontrak Float?   @map("volume_kontrak") // Contract volume
  volumeMC0     Float?   @map("volume_mc0") // MC 0 volume
  bobotMC0      Float?   @map("bobot_mc0") // MC 0 weight in percentage
  weight        Float    @map("weight") // Bobot dalam persen dari activity parent
  order         Int      @default(0) @map("order") // Urutan tampilan
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  
  activity      Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
  schedules     ActivitySchedule[]
  
  @@map("sub_activities")
}

// Model untuk jadwal kegiatan (rencana vs realisasi)
model ActivitySchedule {
  id              String    @id @default(cuid())
  activityId      String?   @map("activity_id")
  subActivityId   String?   @map("sub_activity_id")
  month           Int       @map("month") // 1-12
  year            Int       @map("year")
  week            Int       @map("week") // 1-4 (minggu ke berapa dalam bulan)
  planPercentage  Float?    @default(0) @map("plan_percentage") // Persentase rencana
  actualPercentage Float?   @default(0) @map("actual_percentage") // Persentase realisasi
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  
  activity        Activity?    @relation(fields: [activityId], references: [id], onDelete: Cascade)
  subActivity     SubActivity? @relation(fields: [subActivityId], references: [id], onDelete: Cascade)
  
  @@unique([activityId, month, year, week])
  @@unique([subActivityId, month, year, week])
  @@map("activity_schedules")
}

// Model untuk data kumulatif per minggu
model CumulativeSchedule {
  id                    String   @id @default(cuid())
  projectId             String   @map("project_id")
  month                 Int      @map("month") // 1-12
  year                  Int      @map("year")
  week                  Int      @map("week") // 1-4 (minggu ke berapa dalam bulan)
  cumulativePlan        Float    @default(0) @map("cumulative_plan") // Kumulatif rencana
  cumulativeActual      Float    @default(0) @map("cumulative_actual") // Kumulatif realisasi
  cumulativeDeviation   Float    @default(0) @map("cumulative_deviation") // Kumulatif deviasi
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")
  
  project               Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@unique([projectId, month, year, week])
  @@map("cumulative_schedules")
}

// Model untuk material flow
model Material {
  id              String   @id @default(cuid())
  projectId       String   @map("project_id")
  jenisMaterial   String   @map("jenis_material") // Jenis material (e.g., Pasir, Semen)
  volumeSatuan    String   @default("m3") @map("volume_satuan") // m3 atau buah
  volumeTarget    Float?   @default(0) @map("volume_target") // Target volume
  tanggalMulai    String?  @map("tanggal_mulai") // Start date
  tanggalSelesai  String?  @map("tanggal_selesai") // End date
  waktuSelesai    Int?     @map("waktu_selesai") // Duration in days
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  schedules       MaterialSchedule[]
  
  @@map("materials")
}

// Model untuk jadwal material progress (daily tracking)
model MaterialSchedule {
  id                  String   @id @default(cuid())
  materialId          String   @map("material_id")
  date                String   @map("date") // Format: YYYY-MM-DD
  rencana             Float?   @default(0) @map("rencana") // Daily plan
  rencanaKumulatif    Float?   @default(0) @map("rencana_kumulatif") // Cumulative plan
  realisasi           Float?   @default(0) @map("realisasi") // Daily actual
  realisasiKumulatif  Float?   @default(0) @map("realisasi_kumulatif") // Cumulative actual
  tercapai            String?  @default("Y") @map("tercapai") // Y/T (Yes/No)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
  
  material            Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
  
  @@unique([materialId, date])
  @@map("material_schedules")
}
